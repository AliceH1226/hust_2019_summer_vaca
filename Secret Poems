//https://cn.vjudge.net/contest/319950#problem/B

#include<bits/stdc++.h>
using namespace std;
#define maxn 105
int ans,n,m,t,x;
char str[maxn][maxn];
string s;

void dfs(int x, int y, int n, int t)//(x,y) is the starting point, n is the length of the square that can walk in the cur step
{
    if(n<1)
        return;
    for(int i=y;i<y+n;i++)
    {
        str[x][i]=s[t++];
    }
    for(int i=x+1;i<x+n;i++)
    {
        str[i][y+n-1]=s[t++];
    }
    for(int i=y+n-2;i>=y;i--)
    {
        str[x+n-1][i]=s[t++];
    }
    dfs(x+1,y+1,n-2,t);
}
int main()
{
    while(cin>>n)
    {
        s.clear();
        for(int i=0;i<n;i++)
        {
            cin>>str[i];
        }
        for(int i=0;i<2*n;i++)
        {
            //cout<<endl;
            //cout<<endl;
            if(i%2)//odd, go down
            {
               // cout<<i<<" is odd"<<endl;
                for(int j=i;j>=0;j--)
                {
                    //cout<<"j=="<<j<<endl;
                    if(i-j<n&&j<n)
                    {
                        //cout<<"str["<<i-j<<"]["<<j<<"]=="<<str[i-j][j]<<endl;
                        s+=str[i-j][j];
                    }
                }
            }
            else//even, go up
            {
                //cout<<i<<" is even"<<endl;
                for(int j=0;j<=i;j++)
                {
                    //cout<<"j=="<<j<<endl;
                    if(i-j<n&&j<n)
                    {
                       // cout<<"str["<<i-j<<"]["<<j<<"]=="<<str[i-j][j]<<endl;
                        s+=str[i-j][j];
                    }
                }
            }
        }
        dfs(0,0,n,0);
        for(int i=0;i<n;i++)
        {
            cout<<str[i]<<endl;
        }
    }
}
